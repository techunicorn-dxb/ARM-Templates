{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "outputs": {
    "baseUrl": {
      "type": "string",
      "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
      "metadata": {
        "description": "Base URL of the Web App Bot."
      }
    },
    "userManifest": {
      "type": "string",
      "value": "[ concat('{ \"$schema\": \"https://developer.microsoft.com/en-us/json-schemas/teams/v1.9/MicrosoftTeams.schema.json\", \"manifestVersion\": \"1.9\", \"version\": \"1.0.1\", \"id\": \"', parameters('userApplicationGuid'), '\", \"packageName\": \"com.techunicorn.teams.botcast\", \"developer\": { \"name\": \"Tech Unicorn\", \"websiteUrl\": \"https://www.cxunicorn.com/\", \"privacyUrl\": \"https://www.cxunicorn.com/privacy-policy.html\", \"termsOfUseUrl\": \"https://www.cxunicorn.com/terms-of-use.html\", \"mpnId\": \"6100626\" }, \"icons\": { \"color\": \"color.png\", \"outline\": \"outline.png\" }, \"name\": { \"short\": \"', parameters('appDisplayName'), '\", \"full\": \"', parameters('appDisplayName'), '\" }, \"description\": { \"short\": \"Broadcast messages and track engagement with ', parameters('appDisplayName'), '\", \"full\": \"', parameters('appDisplayName'), ' is a solution designed to broadcast messages to multiple teams through engaging chat messages.\nThe application has been designed using a touch UX approach that ensures a higher participation from the team – with a sentiment analysis dashboard to track engagement metrics around each broadcast.\nFeatures:\n✔ Team collaboration and communication\n✔ Higher employee engagement\n✔ Instant announcement via bot notifications\n✔ Tracks announcements and engagements\n✔ Customized messages for various announcement types\" }, \"accentColor\": \"#FFFFFF\", \"staticTabs\": [ { \"entityId\": \"conversations\", \"scopes\": [ \"personal\" ] }, { \"entityId\": \"about\", \"scopes\": [ \"personal\" ] } ], \"bots\": [ { \"botId\": \"', parameters('clientId'), '\", \"scopes\": [ \"personal\" ], \"supportsFiles\": false, \"isNotificationOnly\": true } ], \"permissions\": [ \"identity\", \"messageTeamMembers\" ], \"validDomains\": [ \"', parameters('webAppBotName'), '.azurewebsites.net\" ], \"webApplicationInfo\": { \"id\": \"', parameters('clientId'), '\", \"resource\": \"api://', parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'), '\" } }') ]",
      "metadata": {
        "description": "Base URL of the Web App Bot."
      }
    },
    "adminManifest": {
      "type": "string",
      "value": "[concat('{ \"$schema\": \"https://developer.microsoft.com/en-us/json-schemas/teams/v1.9/MicrosoftTeams.schema.json\", \"manifestVersion\": \"1.9\", \"version\": \"1.0.1\", \"id\": \"', parameters('adminApplicationGuid'),'\", \"packageName\": \"com.techunicorn.teams.botcast\", \"developer\": { \"name\": \"Tech Unicorn\", \"websiteUrl\": \"https://www.cxunicorn.com/\", \"privacyUrl\": \"https://www.cxunicorn.com/privacy-policy.html\", \"termsOfUseUrl\": \"https://www.cxunicorn.com/terms-of-use.html\", \"mpnId\": \"6100626\" }, \"icons\": { \"color\": \"color.png\", \"outline\": \"outline.png\" }, \"name\": { \"short\": \"', parameters('appDisplayName'), ' - Admin\", \"full\": \"', parameters('appDisplayName'), ' - Admin\" }, \"description\": { \"short\": \"Broadcast messages and track engagement with ', parameters('appDisplayName'), '\", \"full\": \"', parameters('appDisplayName'), ' is a solution designed to broadcast messages to multiple teams through engaging chat messages.\nThe application has been designed using a touch UX approach that ensures a higher participation from the team – with a sentiment analysis dashboard to track engagement metrics around each broadcast.\nFeatures:\n✔ Team collaboration and communication\n✔ Higher employee engagement\n✔ Instant announcement via bot notifications\n✔ Tracks announcements and engagements\n✔ Customized messages for various announcement types\" }, \"accentColor\": \"#FFFFFF\", \"staticTabs\": [ { \"entityId\": \"conversations\", \"scopes\": [ \"personal\" ] }, { \"entityId\": \"dashboard\", \"name\": \"Dashboard\", \"contentUrl\": \"https://', parameters('webAppBotName'), '.azurewebsites.net/dashboard\", \"websiteUrl\": \"https://', parameters('webAppBotName'), '.azurewebsites.net/dashboard\", \"scopes\": [ \"personal\" ] }, { \"entityId\": \"about\", \"scopes\": [ \"personal\" ] } ], \"permissions\": [ \"identity\", \"messageTeamMembers\" ], \"validDomains\": [ \"', parameters('webAppBotName'), '.azurewebsites.net\" ], \"webApplicationInfo\": { \"id\": \"',parameters('clientId'),'\", \"resource\": \"api://', parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'),'\" } }')]",
      "metadata": {
        "description": "Base URL of the Web App Bot."
      }
    }
  },
  "parameters": {
    "senderEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Email address for sending notifications."
      }
    },
    "clientId": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "metadata": {
        "description": "The client ID of the bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
      }
    },
    "clientSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "The client secret of the bot Azure AD app."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "minLength": 1,
      "maxLength": 36,
      "metadata": {
        "description": "The ID of the tenant to which the app will be deployed."
      }
    },
    "appDisplayName": {
      "type": "string",
      "defaultValue": "BotCast",
      "minLength": 1,
      "metadata": {
        "description": "The app (and bot) display name."
      }
    },
    "appDescription": {
      "type": "string",
      "defaultValue": "Broadcast messages to multiple teams and people in one go",
      "minLength": 1,
      "metadata": {
        "description": "The app (and bot) description."
      }
    },
    "appIconUrl": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "https://raw.githubusercontent.com/techunicorn-dxb/ARM-Templates/main/BotCast/color.png",
      "metadata": {
        "description": "The link to the icon for the app. It must resolve to a PNG file."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "installationFunctionAppName": {
      "defaultValue": "botcastinstallationfa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Installation Function App resource."
      }
    },
    "notificationFunctionAppName": {
      "defaultValue": "botcastnotificationfa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Notification Function App resource."
      }
    },
    "emailNotificationFunctionAppName": {
      "defaultValue": "botcastemailnotificationfa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Email Notification Function App resource."
      }
    },
    "teamsNotificationFunctionAppName": {
      "defaultValue": "botcastteamsnotificationfa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Teams Notification Function App resource."
      }
    },
    "editFunctionAppName": {
      "defaultValue": "botcasteditfa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Edit Function App resource."
      }
    },
    "cleanupFunctionAppName": {
      "defaultValue": "botcastcleanupfa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Clean Up Function App resource."
      }
    },
    "deleteFunctionAppName": {
      "defaultValue": "botcastdeletefa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Delete Function App resource."
      }
    },
    "testTeamId": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "ID of the test team (optional)."
      }
    },
    "webAppBotName": {
      "defaultValue": "botcastwab",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Web App Bot resoure."
      }
    },
    "storageAccountName": {
      "defaultValue": "botcastsa",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Storage Account."
      }
    },
    "adminApplicationGuid": {
      "defaultValue": "[newGuid()]",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "Guid used to identify admin teams application."
      }
    },
    "userApplicationGuid": {
      "defaultValue": "[newGuid()]",
      "type": "String",
      "minLength": 1,
      "metadata": {
        "description": "Guid used to identify user teams application."
      }
    },
    "serviceBusNamespaceName": {
      "defaultValue": "botcastsb",
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    }
  },
  "variables": {
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
    "sbVersion": "2017-04-01"
  },
  "resources": [
    {
      "apiVersion": "2017-04-01",
      "name": "[parameters('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/Namespaces",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.BotService/botServices",
      "apiVersion": "2020-06-02",
      "name": "[parameters('webAppBotName')]",
      "location": "global",
      "sku": {
        "name": "F0"
      },
      "kind": "sdk",
      "properties": {
        "displayName": "[parameters('appDisplayName')]",
        "description": "[concat('Broadcast messages and track engagement with ', parameters('appDisplayName'))]",
        "iconUrl": "[parameters('appIconUrl')]",
        "endpoint": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net/api/messages')]",
        "msaAppId": "[parameters('clientId')]",
        "developerAppInsightKey": "[reference(resourceId('Microsoft.Insights/components', parameters('webAppBotName')), '2015-05-01').InstrumentationKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('webAppBotName'))]"
      ]
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('installationFunctionAppName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('notificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('emailNotificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('teamsNotificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('editFunctionAppName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('cleanupFunctionAppName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('deleteFunctionAppName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "AppServiceEnablementCreate",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('webAppBotName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('webAppBotName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('installationFunctionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 20,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('notificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 20,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('emailNotificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 20,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('teamsNotificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 20,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('editFunctionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 20,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('cleanupFunctionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 20,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('deleteFunctionAppName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 20,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('webAppBotName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S2",
        "tier": "Standard",
        "size": "S2",
        "family": "S",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.BotService/botServices/channels",
      "apiVersion": "2020-06-02",
      "name": "[concat(parameters('webAppBotName'), '/MsTeamsChannel')]",
      "location": "global",
      "sku": {
        "name": "F0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.BotService/botServices', parameters('webAppBotName'))]"
      ],
      "properties": {
        "properties": {
          "enableCalling": false,
          "isEnabled": true
        },
        "channelName": "MsTeamsChannel"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "GET"
              ],
              "maxAgeInSeconds": 0,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            }
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 14
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('installationFunctionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('installationFunctionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('installationFunctionAppName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('installationFunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('installationFunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('installationFunctionAppName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "TeamsAppId",
              "value": "HAS TO BE SET FOR INSTALLATION FUNCTION",
              "slotSetting": false
            },
            {
              "name": "TestTeam",
              "value": "[parameters('testTeamId')]",
              "slotSetting": false
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('installationFunctionAppName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://',parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'))]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AppSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AuthUrl",
              "value": "/oauth2/v2.0/token",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('clientId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/",
              "slotSetting": false
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/',parameters('tenantId'),'/v2.0,https://sts.windows.net/',parameters('tenantId'),'/')]",
              "slotSetting": false
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "BaseUrl",
              "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
              "slotSetting": false
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('clientId')]",
              "slotSetting": true
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('clientSecret')]",
              "slotSetting": true
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('notificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/Namespaces', parameters('serviceBusNamespaceName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('notificationFunctionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('notificationFunctionAppName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('notificationFunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('notificationFunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('notificationFunctionAppName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('notificationFunctionAppName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://',parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'))]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AppSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AuthUrl",
              "value": "/oauth2/v2.0/token",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('clientId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/",
              "slotSetting": false
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/',parameters('tenantId'),'/v2.0,https://sts.windows.net/',parameters('tenantId'),'/')]",
              "slotSetting": false
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "BaseUrl",
              "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
              "slotSetting": false
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('clientId')]",
              "slotSetting": true
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('clientSecret')]",
              "slotSetting": true
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            },
            {
              "name": "MaxNumberOfAttempts",
              "value": 1,
              "slotSetting": true
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            },
            {
              "name": "ServiceBusConnection",
              "value": "[listkeys(variables('authRuleResourceId'), variables('sbVersion')).primaryConnectionString]",
              "slotSetting": false
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('emailNotificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/Namespaces', parameters('serviceBusNamespaceName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('emailNotificationFunctionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('emailNotificationFunctionAppName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('emailNotificationFunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('emailNotificationFunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('emailNotificationFunctionAppName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('emailNotificationFunctionAppName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://',parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'))]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AppSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AuthUrl",
              "value": "/oauth2/v2.0/token",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('clientId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/",
              "slotSetting": false
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/',parameters('tenantId'),'/v2.0,https://sts.windows.net/',parameters('tenantId'),'/')]",
              "slotSetting": false
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "BaseUrl",
              "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
              "slotSetting": false
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('clientId')]",
              "slotSetting": true
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('clientSecret')]",
              "slotSetting": true
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            },
            {
              "name": "MaxNumberOfAttempts",
              "value": 1,
              "slotSetting": true
            },
            {
              "name": "SenderEmailId",
              "value": "[parameters('senderEmail')]",
              "slotSetting": true
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            },
            {
              "name": "ServiceBusConnection",
              "value": "[listkeys(variables('authRuleResourceId'), variables('sbVersion')).primaryConnectionString]",
              "slotSetting": false
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('teamsNotificationFunctionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/Namespaces', parameters('serviceBusNamespaceName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('teamsNotificationFunctionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('teamsNotificationFunctionAppName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('teamsNotificationFunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('teamsNotificationFunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('teamsNotificationFunctionAppName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('teamsNotificationFunctionAppName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://',parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'))]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AppSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AuthUrl",
              "value": "/oauth2/v2.0/token",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('clientId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/",
              "slotSetting": false
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/',parameters('tenantId'),'/v2.0,https://sts.windows.net/',parameters('tenantId'),'/')]",
              "slotSetting": false
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "BaseUrl",
              "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
              "slotSetting": false
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('clientId')]",
              "slotSetting": true
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('clientSecret')]",
              "slotSetting": true
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            },
            {
              "name": "MaxNumberOfAttempts",
              "value": 1,
              "slotSetting": true
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            },
            {
              "name": "ServiceBusConnection",
              "value": "[listkeys(variables('authRuleResourceId'), variables('sbVersion')).primaryConnectionString]",
              "slotSetting": false
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('editFunctionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('editFunctionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('editFunctionAppName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('editFunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('editFunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('editFunctionAppName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('editFunctionAppName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://',parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'))]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AppSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AuthUrl",
              "value": "/oauth2/v2.0/token",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('clientId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/",
              "slotSetting": false
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/',parameters('tenantId'),'/v2.0,https://sts.windows.net/',parameters('tenantId'),'/')]",
              "slotSetting": false
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "BaseUrl",
              "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
              "slotSetting": false
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('clientId')]",
              "slotSetting": true
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('clientSecret')]",
              "slotSetting": true
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('cleanupFunctionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('cleanupFunctionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('cleanupFunctionAppName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('cleanupFunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('cleanupFunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cleanupFunctionAppName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('cleanupFunctionAppName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('deleteFunctionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('deleteFunctionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('deleteFunctionAppName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('deleteFunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('deleteFunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('deleteFunctionAppName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('deleteFunctionAppName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://',parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'))]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AppSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AuthUrl",
              "value": "/oauth2/v2.0/token",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('clientId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/",
              "slotSetting": false
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/',parameters('tenantId'),'/v2.0,https://sts.windows.net/',parameters('tenantId'),'/')]",
              "slotSetting": false
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "BaseUrl",
              "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
              "slotSetting": false
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('clientId')]",
              "slotSetting": true
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('clientSecret')]",
              "slotSetting": true
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('webAppBotName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('webAppBotName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('webAppBotName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('editFunctionAppName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('deleteFunctionAppName'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('webAppBotName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('webAppBotName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webAppBotName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "EditFunctionUrl",
              "value": "[concat('https://', parameters('editFunctionAppName'), '.azurewebsites.net/api/EditFunction')]",
              "slotSetting": false
            },
            {
              "name": "DeleteFunctionUrl",
              "value": "[concat('https://', parameters('deleteFunctionAppName'), '.azurewebsites.net/api/DeleteFunction')]",
              "slotSetting": false
            },
            {
              "name": "EditFunctionKey",
              "value": "[listkeys(concat(resourceId('Microsoft.Web/sites', parameters('editFunctionAppName')), '/host/default'), '2019-08-01').functionKeys.default]",
              "slotSetting": true
            },
            {
              "name": "DeleteFunctionKey",
              "value": "[listkeys(concat(resourceId('Microsoft.Web/sites', parameters('deleteFunctionAppName')), '/host/default'), '2019-08-01').functionKeys.default]",
              "slotSetting": true
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('webAppBotName')), '2015-05-01').InstrumentationKey]",
              "slotSetting": true
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://',parameters('webAppBotName'), '.azurewebsites.net/', parameters('clientId'))]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AppSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:AuthUrl",
              "value": "/oauth2/v2.0/token",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('clientId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('clientSecret')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/",
              "slotSetting": false
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]",
              "slotSetting": false
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/',parameters('tenantId'),'/v2.0,https://sts.windows.net/',parameters('tenantId'),'/')]",
              "slotSetting": false
            },
            {
              "name": "BaseUrl",
              "value": "[concat('https://', parameters('webAppBotName'), '.azurewebsites.net')]",
              "slotSetting": false
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('clientId')]",
              "slotSetting": true
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('clientSecret')]",
              "slotSetting": true
            },
            {
              "name": "Settings:EnableApprovalFlow",
              "value": "true",
              "slotSetting": false
            },
            {
              "name": "Settings:EnableEmails",
              "value": "true",
              "slotSetting": false
            },
            {
              "name": "Settings:EnableReactions",
              "value": "true",
              "slotSetting": false
            },
            {
              "name": "Settings:EnableReplies",
              "value": "true",
              "slotSetting": false
            },
            {
              "name": "Settings:VisibleReplies",
              "value": "true",
              "slotSetting": false
            },
            {
              "name": "Settings:EnableSoftDelete",
              "value": "true",
              "slotSetting": false
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')),'2015-05-01-preview').key1)]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0",
              "slotSetting": false
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Warning",
              "slotSetting": true
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    }
  ]
}